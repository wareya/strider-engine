<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/* -- Important! --
    At very high speeds, precision issues can and probably will cause infinite loops in
    certain situations, and it's an unsolvable issue due to how floating point works.
    Using very high precision fixed point numbers would be better, but have less
    precision at low speeds than currently. A compromise through a speed cap is
    possible, however, the current physics have terminal velocity, so it's a non-issue
    to this specific setup. I'll add it if someone needs it, for some reason.
    Also, GM only supports float. So there.
*/

//physics constants
accel = 2;
fric = 1.3;

fallgrav = 1;   //gravity while not jumping
lowgrav = 0.44; //^ while jumping; precisely enough to jump up two-tile high jumps with other vars

jumppower = 6;

airres = (fric-1)/16+1; //used for vertical movement only

/* UNTESTED SANS 1 */   slopesize = 1;   //Climb slopes up to this many pixels steep per width
/* Mixing "real" slope sizes with different slopsize vars is not currently supported. */
/* UNIMPLEMENTED */     slopeangle = 45; //Climb slopes up to this many degrees steep total TODO: IMPLEMENT; REMEMBER BUFFER ROOM FOR AN EXTRA "STEP" (SLOPESIZE)

if(fric == 1 or fric == 0)
    show_message("DEBUG WARNING: Game is probably about to crash because some moron set the friction to something retarded");
    
maxspeed = accel/(fric-1);

//physics variables
d_dir = 0;
jump = false;
grav = fallgrav;

//control constants
key_right = vk_right;
key_left = vk_left;
key_jump = ord('X');

newcurved = 0;
fricfactor = 0;

//demub
debug = 1;
debug_file = 0;


</argument>
      </arguments>
    </action>
  </actions>
</event>
